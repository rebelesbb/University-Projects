     1                                  bits 32 
     2                                  global start
     3                                  extern exit
     4                                  import exit msvcrt.dll
     5                                  segment data use32 class=data
     6                                  ;a - byte, b - word, c - double word, d - qword 
     7                                  ;Interpretare cu semn
     8 00000000 7D                      a db 7Dh
     9 00000001 2C39                    b dw 392Ch
    10 00000003 4B1AE021                c dd 21E01A4Bh
    11 00000007 916A409F7F13AA10        d dq 10AA137F9F406A91h
    12 0000000F <res 00000008>          rezultat resq 1
    13                                  segment code use32 class=code
    14                                  ;(b+b+d)-(c+a)
    15                                  start:
    16                                  
    17                                  ;b+b+d 
    18 00000000 66A1[01000000]          mov ax, [b] 
    19 00000006 660305[01000000]        add ax, [b] ;ax = b+b = 72 58h
    20 0000000D 98                      cwde
    21 0000000E 99                      cdq ;edx:eax= b+b = 00 00 00 00 00 00 72 58h 
    22                                  
    23 0000000F 8B1D[07000000]          mov ebx, [d]
    24 00000015 8B0D[0B000000]          mov ecx, [d+4] ;ecx:ebx = d  
    25                                  
    26 0000001B F8                      clc
    27 0000001C 01D8                    add eax, ebx
    28 0000001E 11CA                    adc edx, ecx ;edx:eax = b+b+d = 10 AA 13 7F 9F 40 DC E9h
    29                                  
    30 00000020 A3[0F000000]            mov [rezultat], eax
    31 00000025 8915[13000000]          mov [rezultat+4], edx
    32                                  
    33                                  ;a+c
    34                                  
    35 0000002B A0[00000000]            mov al, [a]
    36 00000030 6698                    cbw
    37 00000032 98                      cwde ;eax = a 
    38                                  
    39 00000033 0305[03000000]          add eax, [c] ;eax = a+c
    40 00000039 99                      cdq ;edx:eax = a+c =00 00 00 00 21 E0 1A C8h
    41                                  
    42 0000003A 89C3                    mov ebx, eax
    43 0000003C 89D1                    mov ecx, edx 
    44                                  
    45                                  ;(b+b+d)-(c+a)
    46 0000003E A1[0F000000]            mov eax, [rezultat]
    47 00000043 8B15[13000000]          mov edx, [rezultat+4]
    48                                  
    49 00000049 F8                      clc
    50 0000004A 29D8                    sub eax, ebx
    51 0000004C 19CA                    sbb edx, ecx ;edx:eax = (b+b+d)-(c+a)
    52                                  
    53 0000004E A3[0F000000]            mov [rezultat], eax
    54 00000053 8915[13000000]          mov [rezultat+4], edx
    55                                  
    56                                  ;rezultat = (b+b+d)-(c+a) = 10 AA 13 7F 7D 60 C2 21h
    57                                  
    58 00000059 6A00                    push dword 0
    59 0000005B FF15[00000000]          call [exit]
