     1                                  bits 32 
     2                                  global start
     3                                  extern exit
     4                                  import exit msvcrt.dll
     5                                  segment data use32 class=data
     6 00000000 CED2                    a dw 1101001011001110b ;
     7 00000002 F546                    b dw 0100011011110101b ;
     8 00000004 <res 00000004>          c resd 1 
     9                                  segment code use32 class=code
    10                                  ;Se dau cuvintele A si B. Sa se obtina dublucuvantul C:
    11                                  ;bitii 0-2 ai lui C coincid cu bitii 12-14 ai lui A
    12                                  ;bitii 3-8 ai lui C coincid cu bitii 0-5 ai lui B
    13                                  ;bitii 9-15 ai lui C coincid cu bitii 3-9 ai lui A
    14                                  ;bitii 16-31 ai lui C coincid cu bitii lui A
    15                                  
    16                                  start:
    17                                  ;bitii 0-2 ai lui C coincid cu bitii 12-14 ai lui A
    18 00000000 B800000000                   mov eax, 0 ;aici il construim pe c 
    19                                       
    20 00000005 BB00000000                   mov ebx, 0 
    21 0000000A 668B1D[00000000]             mov bx, [a] 
    22                                       
    23 00000011 6681E30070                   and bx, 0111000000000000b ;izolam bitii 12-14 ai lui a, cu masca
    24 00000016 66C1C304                     rol bx, 4 ; rotim spre stanga cu 4 pozitii bitii lui a 
    25                                       
    26 0000001A 09D8                         or eax, ebx ; copiem bitii 12-14 ai lui a in c
    27                                       ;c = 00 00 00 05h
    28                                      
    29                                  ;bitii 3-8 ai lui C coincid cu bitii 0-5 ai lui B
    30 0000001C BB00000000                   mov ebx, 0
    31 00000021 668B1D[02000000]             mov bx, [b]
    32                                       
    33 00000028 6683E33F                     and bx, 0000000000111111b ;izolam bitii 0-5 ai lui b
    34 0000002C 66C1E303                     shl bx, 3 ; mutam spre stanga cu 3 pozitii bitii lui b 
    35                                       
    36 00000030 09D8                         or eax, ebx; copiem bitii 0-5 ai lui b in c 
    37                                       ;c=00 00 01 ADh
    38                                  
    39                                  ;bitii 9-15 ai lui C coincid cu bitii 3-9 ai lui A
    40 00000032 BB00000000                   mov ebx, 0
    41 00000037 668B1D[00000000]             mov bx, [a]
    42                                       
    43 0000003E 6681E3F803                   and bx, 0000001111111000b
    44 00000043 66C1E306                     shl bx, 6
    45                                       
    46 00000047 09D8                         or eax, ebx
    47                                       ;c = 00 00 B3 ADh
    48                                       
    49                                  ;bitii 16-31 ai lui C coincid cu bitii lui A
    50 00000049 BB00000000                   mov ebx, 0
    51 0000004E 668B1D[00000000]             mov bx, [a]
    52 00000055 C1E310                       shl ebx, 16 ;mutam bitii lui pe pozitiile 16-31 in ebx
    53                                       
    54 00000058 09D8                         or eax, ebx
    55                                       ;c = D2 CE B3 ADh
    56                                  
    57 0000005A 6A00                    push dword 0
    58 0000005C FF15[00000000]          call [exit]
